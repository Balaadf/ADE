{
	"name": "copy_the_customer data_from_csv_file_to_SQL_table",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "adls_dataflow_customer_ds",
						"type": "DatasetReference"
					},
					"name": "customercsvadls"
				},
				{
					"dataset": {
						"referenceName": "sqldb_dbo_customer_dataflow_ds",
						"type": "DatasetReference"
					},
					"name": "sqldbcustomerdataflow"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "sqldb_dbo_customer_dataflow_ds",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "leftjoin"
				},
				{
					"name": "filter1"
				},
				{
					"name": "select1"
				},
				{
					"name": "AlterRow1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          CustomerID as short,",
				"          NameStyle as boolean,",
				"          Title as string,",
				"          FirstName as string,",
				"          MiddleName as string,",
				"          LastName as string,",
				"          Suffix as string,",
				"          CompanyName as string,",
				"          SalesPerson as string,",
				"          EmailAddress as string,",
				"          Phone as string,",
				"          PasswordHash as string,",
				"          PasswordSalt as string,",
				"          rowguid as string,",
				"          ModifiedDate as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> customercsvadls",
				"source(output(",
				"          cid as short,",
				"          name as string,",
				"          mailid as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> sqldbcustomerdataflow",
				"customercsvadls, sqldbcustomerdataflow join(CustomerID == cid,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> leftjoin",
				"select1 filter(CustomerID%2==1) ~> filter1",
				"leftjoin select(mapColumn(",
				"          CustomerID,",
				"          cid",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"filter1 alterRow(updateIf(CustomerID==cid),",
				"     insertIf(CustomerID!=cid)) ~> AlterRow1",
				"AlterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          cid as integer,",
				"          name as string,",
				"          mailid as string",
				"     ),",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:false,",
				"     upsertable:true,",
				"     keys:['CustomerID'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
			]
		}
	}
}